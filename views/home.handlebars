{{! Use the main layout }}
{{!< main }} {{! New Post Submission Form }} <section class="content-container">
  {{#if loggedIn}}
  <!-- show the create post form when logged in -->
  <h1>Create A New Post</h1>
  <section class="post-form">
    <img src="/avatar/{{user.username}}" alt="User Avatar" class="header-avatar">
    <!-- make a header here -->
    <form action="/posts" method="POST">
      <!-- title input field name = "title" -->
      <input type="text" name="title" placeholder="Title" required>
      <!-- text area input field name = "content" -->
      <textarea name="content" placeholder="What's on your mind?" required></textarea>

      <div class="form-actions">
        <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
        <button type="submit" class="post-button">Post</button>
      </div>
    </form>

    <div id="emoji-container" class="emoji-panel" style="display: none;">
      <!-- input field for the emoji search, use
                oninput="searchEmojis() -->
      <input type="text" id="emoji-search" placeholder="Search emojis..." oninput="searchEmojis()">
      <!-- a div, id = "emoji-grid" -->
      <div id="emoji-grid"></div>
    </div>
  </section>
  {{/if}}

  <h1>Recent Posts</h1>

  <section class="posts-list">
    <!-- recent posts -->

    {{#if posts.length}}
    <ul>
      {{#each posts}}
      <!-- you have to pass the user in to posts and this is the syntax -->
      {{> post this user=../user}}
      {{/each}}
    </ul>
    {{else}}
    <!-- no posts, oh no, what now? -->
    <p>No posts yet. Be the first to post something!</p>
    {{/if}}
  </section>
  </section>


  {{! JavaScript for Emoji Integration }}
  <script>

    /*
     You want to show a subset of the emojis. About 200. However,
     you also want the user to be able to search all emojis,
     so, put them in this array when the array is empty so
     that you have them.
    */

    let allEmojis = [];  // Global list to hold all emojis

    async function fetchEmojis() {
      try {
        const response = await fetch('https://emoji-api.com/emojis?access_key=4fb07981a933c8917f7aa53524e93eefbba78009');
        const emojis = await response.json();
        allEmojis = emojis;
        displayEmojis(emojis);
      } catch (error) {
        console.error('Failed to fetch emojis:', error);
      }
    }

    function toggleEmojiPanel() {
      const container = document.getElementById('emoji-container');
      container.style.display = container.style.display === 'none' ? 'block' : 'none';


      if (container.style.display === 'block' && allEmojis.length == 0) {
        // go "Fetch" you some emojis and show them off with displayEmojis
        fetchEmojis();
      }
    }

    function displayEmojis(emojis, limit = 200) {
      const container = document.getElementById('emoji-grid');
      container.innerHTML = '';  // Clear previous results
      if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
          const emojiElement = document.createElement('span');
          emojiElement.textContent = emoji.character;
          emojiElement.title = emoji.slug;  // Showing the emoji name on hover
          emojiElement.style.cursor = 'pointer';
          emojiElement.style.fontSize = '24px';
          emojiElement.style.margin = '5px';
          emojiElement.onclick = () => insertEmoji(emoji.character);
          container.appendChild(emojiElement);
        });
      } else {
        container.textContent = 'No emojis found. Try a different search!';
      }
    }

    function searchEmojis() {
      const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
      // array.filter takes a predicate
      // use string.includes.

      const filteredEmojis = allEmojis.filter(emoji => emoji.slug.toLowerCase().includes(searchTerm));

      displayEmojis(filteredEmojis);
    }

    function insertEmoji(emoji) {
      // put an emoji on a form somehow.

      // do this when you're doing getting the emoji on the form
      //

      const textarea = document.querySelector('textarea[name="content"]');
      const start = textarea.selectionStart;
      const end = textarea.selectionEnd;
      const text = textarea.value;
      textarea.value = text.slice(0, start) + emoji + text.slice(end);
      textarea.selectionStart = textarea.selectionEnd = start + emoji.length;

      textarea.focus();  // Keep focus on the textarea
    }
  </script>
